version: '3.8'

services:
  # RabbitMQ Service with Health Check
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5673:5672"  # RabbitMQ port
      - "15673:15672" # Management UI port
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq 
    networks:
      - rabbitmq_nodejs
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # App Service
  app:
    image: trickstercell/data-server:latest
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://root:example@mongodb:27017
      - DB_CONNECTION_STRING=postgres://myuser:mypassword@postgres:5432/your_database
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672  # Use the correct RabbitMQ credentials
      - OPEN_WEATHER_API_KEY=299091daeccd2dce0c350f2d693017ec
    depends_on:
      - redis
      - postgres
      - mongodb
      - rabbitmq  # Keep this as a string for compatibility

  # Frontend Service
  frontend:
    image: trickstercell/weather-app-fe:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_SERVER_URL=http://localhost:5001
    depends_on:
      - user_interaction_server

  # User Interaction Server
  user_interaction_server:
    image: trickstercell/user-server:latest
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://root:example@mongodb:27017
      - DB_CONNECTION_STRING=postgres://myuser:mypassword@postgres:5432/your_database
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=Zeotap
      - OPEN_WEATHER_API_KEY=299091daeccd2dce0c350f2d693017ec
    depends_on:
      - redis
      - postgres
      - rabbitmq  # Keep this as a string for compatibility

  # Worker Service
  worker:
    image: trickstercell/workers-worker:latest
    ports:
      - "6001:6001"
    environment:
      - NODE_ENV=development
      - SENDER_EMAIL=yash_2001ee83@iitp.ac.in
      - SENDER_PASSWORD=ee8315022002++  # Ensure not to expose sensitive information in public repositories
      - RABBIT_MQ_URL=amqp://guest:guest@rabbitmq:5672  # Use the correct RabbitMQ credentials
    depends_on:
      - rabbitmq  # Keep this as a string for compatibility
      - mongodb

  # Redis Service
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # PostgreSQL Service
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: your_database  # Specify the database name to create
    ports:
      - "5432:5432"

  # MongoDB Service
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:  # Define named volume for MongoDB

networks:
  rabbitmq_nodejs:
    driver: bridge
